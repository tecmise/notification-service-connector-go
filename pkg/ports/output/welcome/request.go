// Code generated by protoc-gen-rest-client. DO NOT EDIT.
// source: proto/ports/output/request.proto

package welcome

import (
	shared_kernel "github.com/tecmise/notification-service-connector-go/pkg/ports/output/shared_kernel"
)

import (
	"encoding/json"
	"github.com/go-playground/validator/v10"
	"github.com/tecmise/connector-lib/pkg/ports/output/request"
)

// WelcomeRequest representa o modelo de dados para WelcomeRequest
type WelcomeRequest struct {
	// The email address of the new user
	To string `json:"to" validate:"required,email" sqs:"message_group_id,message_deduplication_id"`
	// The password for the new user
	Password string `json:"password" validate:"required"`
	// The token for user verification
	Token string `json:"token" validate:"required"`
	// The name of the new user
	Name string `json:"name" validate:"required"`
	// The locale of the new user
	Locale shared_kernel.Locale `json:"locale" validate:"required"`
	// The mail identity to be used
	Identity shared_kernel.Identity `json:"Identity" validate:"required"`
}

// String retorna uma representação em string do WelcomeRequest
var _ request.Validatable = (*WelcomeRequest)(nil)

func (m *WelcomeRequest) String() string {
	data, _ := json.MarshalIndent(m, "", "  ")
	return string(data)
}

// Validate valida os campos do WelcomeRequest
func (m *WelcomeRequest) Validate(functions ...request.CustomValidator) error {
	validate := validator.New()
	if functions != nil {
		for _, function := range functions {
			if err := validate.RegisterValidation(function.Name, function.Method); err != nil {
				return err
			}
		}
	}
	return validate.Struct(m)
}

// NewWelcomeRequest cria uma nova instância de WelcomeRequest
func NewWelcomeRequest() *WelcomeRequest {
	return &WelcomeRequest{}
}
